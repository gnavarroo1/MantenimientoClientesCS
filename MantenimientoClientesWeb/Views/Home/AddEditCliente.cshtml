@using MantenimientoClientesWeb.ViewModel
@model AddEditClienteViewModel

@{
    ViewBag.Title = Model.ClienteId.HasValue ? "Editar cliente" : "Agregar cliente";
    ViewBag.SubTitle = Model.ClienteId.HasValue ? "Editar" : "Agregar";
    ViewBag.Icon = "fa fa-user";
    ViewBag.Categoria = "active";
    ViewBag.message = Model.ClienteId.HasValue ? "¿Está seguro de actualizar este cliente?" : "¿Está seguro de registrar este cliente?";
}   
<form name=formulario role="form" method="post" action="@Url.Action("AddEditCliente")" >
    @Html.HiddenFor(x => x.ClienteId)
    <div >
        <div class="form-group">
            <label>Apellido</label><label style="color:red">&nbsp;&nbsp; @Html.ValidationMessageFor(x => x.Apellido, "", new { id= "apellidoError" })</label>
            @Html.TextBoxFor(x => x.Apellido, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Nombre</label><label style="color:red"> &nbsp;&nbsp; @Html.ValidationMessageFor(x => x.Nombre ,"", new { id = "nombreError" })</label>
            @Html.TextBoxFor(x => x.Nombre, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>DNI</label><label style="color:red"> &nbsp;&nbsp; @Html.ValidationMessageFor(x => x.Dni, "", new { id = "dniError" })</label>
            @Html.TextBoxFor(x => x.Dni, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Sexo</label><label style="color:red"> &nbsp;&nbsp; @Html.ValidationMessageFor(x => x.Sexo, "", new { id = "sexoError" })</label>
            <div>@Html.Label("Masculino:  ")&nbsp;&nbsp;@Html.RadioButtonFor(x => x.Sexo, "MASCULINO")</div>
            <div>@Html.Label("Femenino:  ")&nbsp;&nbsp;@Html.RadioButtonFor(x => x.Sexo, "FEMENINO")</div>
        </div>
        <div class="form-group">
            <label>Edad</label><label style="color:red"> &nbsp;&nbsp; @Html.ValidationMessageFor(x => x.Edad, "", new { id = "edadError" })</label>
            @Html.TextBoxFor(x => x.Edad, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Nivel de Estudios</label><label style="color:red"> &nbsp;&nbsp; @Html.ValidationMessageFor(x => x.Nivelestudios, "", new { id = "nivelError" })</label>
            @Html.DropDownListFor(x => x.Nivelestudios, new SelectList(Enum.GetValues(typeof(NivelEstudios))),
                    "Seleccionar",
                    new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Telefono</label><label style="color:red"> &nbsp;&nbsp; @Html.ValidationMessageFor(x => x.Telefono, "", new { id = "telfError" })</label>
            @Html.TextBoxFor(x => x.Telefono, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary" id="btnGuardar">
                <i class="fa fa-save"></i>Guardar
            </button>
            <a href="@Url.Action("LstCliente")"><i class="fa fa-arrow-left"></i>Cancelar </a>
        </div>
            @if (ViewBag.Success != null)
            {
                <div>
                    <label class="field-validation-error" id="AddEditSuccessMsg" style="color: black;font-weight: bold;background-color: yellowgreen;">@ViewBag.Success</label>
                </div>
            }
    </div>
    

    
    
</form>
